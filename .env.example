# Example environment variables for fingerprint-system
# Copy to a file named .env and fill in values before running the server.

# Server
PORT=5000
NODE_ENV=development

# JWT: used to sign issued tokens. Use a long, random secret in production.
JWT_SECRET=replace_with_a_strong_random_secret_here

# Database (optional - currently server.js uses a hardcoded connection string, replace it if you want env-driven DB)
# Example MongoDB connection string (replace user/pass and cluster):
# MONGODB_URI=mongodb+srv://<user>:<pass>@cluster0.mongodb.net/ATTENDANCE
MONGODB_URI=mongodb+srv://studentbiometric:studentbio123@attendance.yxnsnof.mongodb.net/ATTENDANCE

# Google Apps Script (GAS) web app used for sending certificates
GAS_WEB_APP_URL=https://script.google.com/macros/s/....
GAS_API_KEY=your_gas_api_key_here
TEMPLATE_DOC_ID=your_template_doc_id_here
OUTPUT_FOLDER_ID=your_output_folder_id_here

# SMTP (required for /send-code to deliver login codes)
SMTP_HOST=smtp.example.com
SMTP_PORT=587
SMTP_SECURE=false  # true for SMTPS (465), false for STARTTLS (587)
SMTP_USER=you@example.com
SMTP_PASS=super_secret_smtp_password
SMTP_FROM=you@example.com
SEND_CODE_SUBJECT=Your login code

# Optional
# Adjust token expiry in code if needed; default in server.js is 8h

# Notes:
# - This file is a template. Do NOT commit real secrets to version control.
# - On Windows PowerShell you can create the .env file and set these values, or set environment variables with $env:NAME = 'value' during testing.
